version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:14.15"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '14.15'         
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      # Install dependencies in the the backend API          
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      # Lint the frontend
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      # Build the frontend app
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Front-End test
          command: |
            echo "TODO: Build the backend API"

      # Build the backend API      
      - run:
          name: API Build
          command: |
            npm run api:build
  test:
    docker:
    # the base image can run most needed actions with orbs
    - image: "cimg/node:14.15"
    steps:
      # install node 
      - node/install:
          node-version: '14.15'  
      - checkout
      - run:
          name: unit test Front-End 
          command: |
            npm run frontend:test

  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15' 
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          aws-region: AWS_REGION
      - eb/setup
      - checkout
      - run:
          name: Deploy App
          # TODO: Install, build, deploy in both apps
          command: |
            aws configure set aws_session_token "FwoGZXIvYXdzEI///////////wEaDBwYdxGUB9tndmPwoSLVATdvAqCuOwUXXfTs+GfdLyOl3vrVb6T2Z7f1mS0+EeBCQMYeIsefAeItabgJFN//MaoKte0zd9hBkJxyR8lq+vzo/HWplwkn9vrWfXDUh52zlgjvG/iLQ9TbpvxQCMkmAxxmHWaVnxzuOQrH0/dm3PUYnGlSYo0/ipbf0b54/ikkGSP8GpMyKIU1v5jhg/K1T89MsVq03GygZAMR5hV4VJvGEIUJE1ihMLBGQ80Aa7DKXy5qEeyQZn/hE7oh4iK0jhLLksR+wIZsTVUwHdoBpNK1jeaY1CiW/vWeBjItKI7aFmgmXOhCbGXP1lWEmN6wbSC2gEFVaHHfU00go4EA30xNjBjlDpU49VLi" 
            npm run api:deploy

            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
            # - test
      - deploy:
          context: aws-credentials
          requires:
            - hold
